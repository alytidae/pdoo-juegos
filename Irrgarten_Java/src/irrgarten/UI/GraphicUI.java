/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package irrgarten.UI;
import irrgarten.GameState;
import irrgarten.Directions;
/**
 *
 * @author usuario
 */
public class GraphicUI extends javax.swing.JFrame implements UI{ //TODO: ui
    private GetDirectionInterface directionGetter;
    /**
     * Creates new form GraphicUI
     */
    public GraphicUI() {
        setVisible(true);
        directionGetter = new GetDirectionInterface(this, true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        labyrinthTextBox = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        playersTextBox = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        monstersTextBox = new javax.swing.JTextArea();
        currentPlayerText = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        logTextBox = new javax.swing.JTextArea();
        TITLE = new javax.swing.JLabel();
        gameOverText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 204));

        labyrinthTextBox.setEditable(false);
        labyrinthTextBox.setBackground(new java.awt.Color(51, 51, 51));
        labyrinthTextBox.setColumns(20);
        labyrinthTextBox.setFont(new java.awt.Font("Liberation Mono", 0, 15)); // NOI18N
        labyrinthTextBox.setForeground(new java.awt.Color(255, 255, 255));
        labyrinthTextBox.setRows(5);
        labyrinthTextBox.setText("prueba");
        labyrinthTextBox.setAutoscrolls(false);
        jScrollPane1.setViewportView(labyrinthTextBox);

        playersTextBox.setEditable(false);
        playersTextBox.setColumns(20);
        playersTextBox.setLineWrap(true);
        playersTextBox.setRows(5);
        playersTextBox.setWrapStyleWord(true);
        jScrollPane2.setViewportView(playersTextBox);

        monstersTextBox.setEditable(false);
        monstersTextBox.setColumns(20);
        monstersTextBox.setLineWrap(true);
        monstersTextBox.setRows(5);
        monstersTextBox.setWrapStyleWord(true);
        jScrollPane3.setViewportView(monstersTextBox);

        currentPlayerText.setForeground(new java.awt.Color(255, 0, 255));
        currentPlayerText.setText("Current Player: XXXX");

        logTextBox.setEditable(false);
        logTextBox.setColumns(20);
        logTextBox.setRows(5);
        jScrollPane4.setViewportView(logTextBox);

        TITLE.setFont(new java.awt.Font("Liberation Serif", 0, 36)); // NOI18N
        TITLE.setText("IRRGARTEN");

        gameOverText.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        gameOverText.setForeground(new java.awt.Color(0, 153, 0));
        gameOverText.setText("GAME OVER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentPlayerText)
                            .addComponent(gameOverText))
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TITLE)
                .addGap(198, 198, 198))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(TITLE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentPlayerText)
                        .addGap(18, 18, 18)
                        .addComponent(gameOverText))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void showGame(GameState gs){
        labyrinthTextBox.setText(gs.getLabyrinth());
        playersTextBox.setText("PLAYERS:\n" + gs.getPlayers());
        monstersTextBox.setText("MONSTERS:\n" + gs.getMonsters());
        logTextBox.setText("==LOG==\n" + gs.getLog());
        currentPlayerText.setText("Current Player: " + Integer.toString(gs.getCurrentPlayer()));
        if(gs.isWinner()){
            gameOverText.setText("GAME OVER");
        } else {
            gameOverText.setText("");
        }
        repaint();
    }
    
    @Override
    public Directions nextMove(){
        return directionGetter.getDirection();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TITLE;
    private javax.swing.JLabel currentPlayerText;
    private javax.swing.JLabel gameOverText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea labyrinthTextBox;
    private javax.swing.JTextArea logTextBox;
    private javax.swing.JTextArea monstersTextBox;
    private javax.swing.JTextArea playersTextBox;
    // End of variables declaration//GEN-END:variables
}
